[versions]
compose = "1.5.4"
compose-plugin = "1.5.3"
compose-compiler = "1.5.3"
agp = "8.1.2"
android-minSdk = "24"
android-compileSdk = "34"
android-targetSdk = "34"
androidx-activityCompose = "1.8.0"
androidx-core-ktx = "1.12.0"
androidx-appcompat = "1.6.1"
androidx-material = "1.10.0"
androidx-constraintlayout = "2.1.4"
androidx-test-junit = "1.1.5"
androidx-espresso-core = "3.5.1"
kotlin = "1.9.10"
junit = "4.13.2"
immutableCollections = "0.3.5"
koin = "3.4.0"
ktor = "2.3.4"
koinCompose = "1.0.0"
sqlDelight = "2.0.0"
decompose = "1.0.0"
preCompose = "1.5.4"
mokoResources = "0.23.0"
libres = "1.1.8"
composeMaterialDialog = "0.9.3"
multiplatformSettings = "1.0.0-RC"
decompose-compose-experimental = "1.0.0-compose-experimental"
kotlinxDateTime = "0.4.0"
coroutines = "1.7.3"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

preCompose = { module = "moe.tlaster:precompose", version.ref = "preCompose" }
preComposeViewModel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "preCompose" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose-compose-experimental" }
decompose_extensions = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose-compose-experimental" }

koin_core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koinCompose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

ktorCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorSerializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

ktorAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktorDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktorJAVA = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktorJS = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

sqlDelight_runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight_android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight_native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight_sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
immutableCollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutableCollections" }

mokoResources = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }

multiplatformSettings= { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettingsCoroutines= { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

[plugins]
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
mokoResources= { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }